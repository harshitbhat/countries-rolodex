{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","country","name","src","flag","capital","region","subregion","population","timezones","CardList","countries","length","map","numericCode","SearchBox","placeholder","handleChange","type","onChange","App","evt","setState","searchField","target","value","state","a","fetch","res","json","data","this","fetchCountries","filteredCountries","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAKF,EAAMG,QAAQC,KAAMC,IAAKL,EAAMG,QAAQG,OACjD,6BAAKN,EAAMG,QAAQC,OACnB,qBAAKH,UAAU,aAAf,SACE,gCACE,kCACE,+BACE,2CACA,oBAAIA,UAAU,YAAd,SAA2BD,EAAMG,QAAQI,aAE3C,+BACE,0CACA,oBAAIN,UAAU,YAAd,SAA2BD,EAAMG,QAAQK,YAE3C,+BACE,8CACA,oBAAIP,UAAU,YAAd,SAA2BD,EAAMG,QAAQM,eAE3C,+BACE,8CACA,oBAAIR,UAAU,YAAd,SAA2BD,EAAMG,QAAQO,gBAE3C,+BACE,6CACA,oBAAIT,UAAU,YAAd,SAA2BD,EAAMG,QAAQQ,UAAU,mBCxBlDC,G,MAAW,SAACZ,GAAD,OACtB,qBAAKC,UAAU,WAAf,SACGD,EAAMa,UAAUC,OAAS,GACxBd,EAAMa,UAAUE,KAAI,SAACZ,GAAD,OAClB,cAAC,EAAD,CAAgCA,QAASA,GAA9BA,EAAQa,oBCLdC,G,MAAY,SAAC,GAAD,EAAGC,YAAH,IAAgBC,EAAhB,EAAgBA,aAAhB,OACvB,uBACElB,UAAU,SACVmB,KAAK,SACLF,YAAY,mBACZG,SAAUF,MCsCCG,E,kDAxCb,WAAYtB,GAAQ,IAAD,8BACjB,cAAMA,IAcRmB,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAIG,OAAOC,SAdxC,EAAKC,MAAQ,CACXf,UAAW,GACXY,YAAa,IAJE,E,yFAOnB,8BAAAI,EAAA,sEACoBC,MAAM,wCAD1B,cACQC,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAGEC,KAAKV,SAAS,CAAEX,UAAWoB,IAH7B,gD,qFAKA,WACEC,KAAKC,mB,oBAKP,WAAU,IAAD,EAC4BD,KAAKN,MAAhCf,EADD,EACCA,UAAWY,EADZ,EACYA,YACfW,EAAoB,GAOxB,OANIvB,IACFuB,EAAoBvB,EAAUwB,QAAO,SAAClC,GAAD,OACnCA,EAAQC,KAAKkC,cAAcC,SAASd,EAAYa,mBAKlD,sBAAKrC,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CACEiB,YAAY,mBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUN,UAAWuB,W,GAnCXI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b336071.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Card.css';\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img alt={props.country.name} src={props.country.flag}></img>\n    <h2>{props.country.name}</h2>\n    <div className=\"data-table\">\n      <table>\n        <tbody>\n          <tr>\n            <td>Capital: </td>\n            <td className=\"second-td\">{props.country.capital}</td>\n          </tr>\n          <tr>\n            <td>Region: </td>\n            <td className=\"second-td\">{props.country.region}</td>\n          </tr>\n          <tr>\n            <td>Sub Region: </td>\n            <td className=\"second-td\">{props.country.subregion}</td>\n          </tr>\n          <tr>\n            <td>Population: </td>\n            <td className=\"second-td\">{props.country.population}</td>\n          </tr>\n          <tr>\n            <td>TimeZones: </td>\n            <td className=\"second-td\">{props.country.timezones[0]}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { Card } from '../card/Card';\nimport './CardList.css';\n\nexport const CardList = (props) => (\n  <div className=\"CardList\">\n    {props.countries.length > 0 &&\n      props.countries.map((country) => (\n        <Card key={country.numericCode} country={country} />\n      ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './SearchBox.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder=\"Search Countries\"\n    onChange={handleChange}\n  />\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/CardList';\nimport { SearchBox } from './components/search-box/SearchBox';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      searchField: '',\n    };\n  }\n  async fetchCountries() {\n    const res = await fetch('https://restcountries.eu/rest/v2/all');\n    const data = await res.json();\n    this.setState({ countries: data });\n  }\n  componentDidMount() {\n    this.fetchCountries();\n  }\n  handleChange = (evt) => {\n    this.setState({ searchField: evt.target.value });\n  };\n  render() {\n    const { countries, searchField } = this.state;\n    let filteredCountries = [];\n    if (countries) {\n      filteredCountries = countries.filter((country) =>\n        country.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Countries Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Countries\"\n          handleChange={this.handleChange}\n        />\n        <CardList countries={filteredCountries} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}